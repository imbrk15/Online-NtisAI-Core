@tailwind base;
@tailwind components;
@tailwind utilities;
/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
        *, :before, :after, ::backdrop {
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-rotate-x: rotateX(0);
            --tw-rotate-y: rotateY(0);
            --tw-rotate-z: rotateZ(0);
            --tw-skew-x: skewX(0);
            --tw-skew-y: skewY(0);
            --tw-space-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-tracking: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
        }
    }
}

@layer theme {
    :root, :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
        --color-red-500: oklch(.637 .237 25.331);
        --color-red-600: oklch(.577 .245 27.325);
        --color-orange-500: oklch(.705 .213 47.604);
        --color-orange-600: oklch(.646 .222 41.116);
        --color-amber-500: oklch(.769 .188 70.08);
        --color-amber-600: oklch(.666 .179 58.318);
        --color-yellow-500: oklch(.795 .184 86.047);
        --color-yellow-600: oklch(.681 .162 75.834);
        --color-green-500: oklch(.723 .219 149.579);
        --color-green-600: oklch(.627 .194 149.214);
        --color-emerald-500: oklch(.696 .17 162.48);
        --color-emerald-600: oklch(.596 .145 163.225);
        --color-teal-500: oklch(.704 .14 182.503);
        --color-teal-600: oklch(.6 .118 184.704);
        --color-cyan-500: oklch(.715 .143 215.221);
        --color-cyan-600: oklch(.609 .126 221.723);
        --color-sky-500: oklch(.685 .169 237.323);
        --color-sky-600: oklch(.588 .158 241.966);
        --color-blue-50: oklch(.97 .014 254.604);
        --color-blue-100: oklch(.932 .032 255.585);
        --color-blue-200: oklch(.882 .059 254.128);
        --color-blue-500: oklch(.623 .214 259.815);
        --color-blue-600: oklch(.546 .245 262.881);
        --color-blue-800: oklch(.424 .199 265.638);
        --color-blue-900: oklch(.379 .146 265.522);
        --color-blue-950: oklch(.282 .091 267.935);
        --color-indigo-50: oklch(.962 .018 272.314);
        --color-indigo-500: oklch(.585 .233 277.117);
        --color-indigo-600: oklch(.511 .262 276.966);
        --color-indigo-950: oklch(.257 .09 281.288);
        --color-violet-500: oklch(.606 .25 292.717);
        --color-violet-600: oklch(.541 .281 293.009);
        --color-purple-500: oklch(.627 .265 303.9);
        --color-purple-600: oklch(.558 .288 302.321);
        --color-pink-500: oklch(.656 .241 354.308);
        --color-pink-600: oklch(.592 .249 .584);
        --color-rose-500: oklch(.645 .246 16.439);
        --color-rose-600: oklch(.586 .253 17.585);
        --color-slate-50: oklch(.984 .003 247.858);
        --color-slate-100: oklch(.968 .007 247.896);
        --color-slate-200: oklch(.929 .013 255.508);
        --color-slate-300: oklch(.869 .022 252.894);
        --color-slate-500: oklch(.554 .046 257.417);
        --color-slate-600: oklch(.446 .043 257.281);
        --color-slate-700: oklch(.372 .044 257.287);
        --color-slate-800: oklch(.279 .041 260.031);
        --color-slate-900: oklch(.208 .042 265.755);
        --color-black: #000;
        --color-white: #fff;
        --spacing: .25rem;
        --container-md: 28rem;
        --container-lg: 32rem;
        --container-7xl: 80rem;
        --text-xs: .75rem;
        --text-xs--line-height: calc(1 / .75);
        --text-sm: .875rem;
        --text-sm--line-height: calc(1.25 / .875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-xl: 1.25rem;
        --text-2xl: 1.5rem;
        --text-3xl: 1.875rem;
        --text-3xl--line-height: calc(2.25 / 1.875);
        --font-weight-normal: 400;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --tracking-tight: -.025em;
        --leading-tight: 1.25;
        --leading-relaxed: 1.625;
        --radius-xs: .125rem;
        --animate-spin: spin 1s linear infinite;
        --blur-sm: 8px;
        --blur-3xl: 64px;
        --default-transition-duration: .15s;
        --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
        --default-font-family: var(--font-sans);
        --default-font-feature-settings: var(--font-sans--font-feature-settings);
        --default-font-variation-settings: var(--font-sans--font-variation-settings);
        --default-mono-font-family: var(--font-mono);
        --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
        --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
    }
}

@layer base {
    *, :after, :before, ::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }

    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }

    html, :host {
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }

    body {
        line-height: inherit;
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }

    h1, h2, h3, h4, h5, h6 {
        font-size: inherit;
        font-weight: inherit;
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }

    b, strong {
        font-weight: bolder;
    }

    code, kbd, samp, pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    sub, sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative;
    }

    sub {
        bottom: -.25em;
    }

    sup {
        top: -.5em;
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }

    :-moz-focusring {
        outline: auto;
    }

    progress {
        vertical-align: baseline;
    }

    summary {
        display: list-item;
    }

    ol, ul, menu {
        list-style: none;
    }

    img, svg, video, canvas, audio, iframe, embed, object {
        vertical-align: middle;
        display: block;
    }

    img, video {
        max-width: 100%;
        height: auto;
    }

    button, input, select, optgroup, textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }

    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }

        :where(select:is([multiple], [size])) optgroup option {
            padding-inline-start: 20px;
        }

    ::file-selector-button {
        margin-inline-end: 4px;
    }

    ::placeholder {
        opacity: 1;
        color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
        ::placeholder {
            color: color-mix(in oklab, currentColor 50%, transparent);
        }
    }

    textarea {
        resize: vertical;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        display: inline-flex;
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }

    ::-webkit-datetime-edit {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-year-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-month-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-day-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-hour-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-minute-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-second-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-millisecond-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }

    :-moz-ui-invalid {
        box-shadow: none;
    }

    button, input:where([type="button"], [type="reset"], [type="submit"]) {
        appearance: button;
    }

    ::file-selector-button {
        appearance: button;
    }

    ::-webkit-inner-spin-button {
        height: auto;
    }

    ::-webkit-outer-spin-button {
        height: auto;
    }

    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }

    * {
        border-color: var(--border);
        outline-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        * {
            outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    * {
        border-color: var(--border);
        outline-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        * {
            outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    body {
        background-color: var(--background);
        color: var(--foreground);
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
        font-size: var(--text-2xl);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
        font-size: var(--text-xl);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
        font-size: var(--text-lg);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
        font-size: var(--text-base);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
        font-size: var(--text-base);
        font-weight: var(--font-weight-normal);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
        font-size: var(--text-base);
        font-weight: var(--font-weight-medium);
        line-height: 1.5;
    }

    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input {
        font-size: var(--text-base);
        font-weight: var(--font-weight-normal);
        line-height: 1.5;
    }
}

@layer utilities {
    .\@container\/card-header {
        container: card-header / inline-size;
    }

    .pointer-events-none {
        pointer-events: none;
    }

    .sr-only {
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        position: absolute;
        overflow: hidden;
    }

    .absolute {
        position: absolute;
    }

    .fixed {
        position: fixed;
    }

    .relative {
        position: relative;
    }

    .sticky {
        position: sticky;
    }

    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }

    .-top-40 {
        top: calc(var(--spacing) * -40);
    }

    .top-0 {
        top: calc(var(--spacing) * 0);
    }

    .top-1\/2 {
        top: 50%;
    }

    .top-4 {
        top: calc(var(--spacing) * 4);
    }

    .top-\[50\%\] {
        top: 50%;
    }

    .-right-40 {
        right: calc(var(--spacing) * -40);
    }

    .right-0 {
        right: calc(var(--spacing) * 0);
    }

    .right-2 {
        right: calc(var(--spacing) * 2);
    }

    .right-4 {
        right: calc(var(--spacing) * 4);
    }

    .-bottom-40 {
        bottom: calc(var(--spacing) * -40);
    }

    .bottom-4 {
        bottom: calc(var(--spacing) * 4);
    }

    .-left-40 {
        left: calc(var(--spacing) * -40);
    }

    .left-0 {
        left: calc(var(--spacing) * 0);
    }

    .left-3 {
        left: calc(var(--spacing) * 3);
    }

    .left-\[50\%\] {
        left: 50%;
    }

    .-z-10 {
        z-index: calc(10 * -1);
    }

    .z-10 {
        z-index: 10;
    }

    .z-50 {
        z-index: 50;
    }

    .col-start-2 {
        grid-column-start: 2;
    }

    .row-span-2 {
        grid-row: span 2 / span 2;
    }

    .row-start-1 {
        grid-row-start: 1;
    }

    .-mx-1 {
        margin-inline: calc(var(--spacing) * -1);
    }

    .-mx-6 {
        margin-inline: calc(var(--spacing) * -6);
    }

    .mx-auto {
        margin-inline: auto;
    }

    .my-1 {
        margin-block: calc(var(--spacing) * 1);
    }

    .-mt-6 {
        margin-top: calc(var(--spacing) * -6);
    }

    .mt-0\.5 {
        margin-top: calc(var(--spacing) * .5);
    }

    .mt-1 {
        margin-top: calc(var(--spacing) * 1);
    }

    .mt-2 {
        margin-top: calc(var(--spacing) * 2);
    }

    .mt-3 {
        margin-top: calc(var(--spacing) * 3);
    }

    .mt-4 {
        margin-top: calc(var(--spacing) * 4);
    }

    .mt-6 {
        margin-top: calc(var(--spacing) * 6);
    }

    .mr-1 {
        margin-right: calc(var(--spacing) * 1);
    }

    .mr-2 {
        margin-right: calc(var(--spacing) * 2);
    }

    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }

    .mb-3 {
        margin-bottom: calc(var(--spacing) * 3);
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }

    .mb-6 {
        margin-bottom: calc(var(--spacing) * 6);
    }

    .ml-2 {
        margin-left: calc(var(--spacing) * 2);
    }

    .line-clamp-1 {
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        display: -webkit-box;
        overflow: hidden;
    }

    .block {
        display: block;
    }

    .flex {
        display: flex;
    }

    .grid {
        display: grid;
    }

    .hidden {
        display: none;
    }

    .inline-flex {
        display: inline-flex;
    }

    .table {
        display: table;
    }

    .table-caption {
        display: table-caption;
    }

    .table-cell {
        display: table-cell;
    }

    .table-row {
        display: table-row;
    }

    .field-sizing-content {
        field-sizing: content;
    }

    .size-2\.5 {
        width: calc(var(--spacing) * 2.5);
        height: calc(var(--spacing) * 2.5);
    }

    .size-3\.5 {
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
    }

    .size-4 {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
    }

    .size-9 {
        width: calc(var(--spacing) * 9);
        height: calc(var(--spacing) * 9);
    }

    .size-full {
        width: 100%;
        height: 100%;
    }

    .h-2\.5 {
        height: calc(var(--spacing) * 2.5);
    }

    .h-3 {
        height: calc(var(--spacing) * 3);
    }

    .h-4 {
        height: calc(var(--spacing) * 4);
    }

    .h-5 {
        height: calc(var(--spacing) * 5);
    }

    .h-6 {
        height: calc(var(--spacing) * 6);
    }

    .h-7 {
        height: calc(var(--spacing) * 7);
    }

    .h-8 {
        height: calc(var(--spacing) * 8);
    }

    .h-9 {
        height: calc(var(--spacing) * 9);
    }

    .h-10 {
        height: calc(var(--spacing) * 10);
    }

    .h-12 {
        height: calc(var(--spacing) * 12);
    }

    .h-96 {
        height: calc(var(--spacing) * 96);
    }

    .h-\[1\.15rem\] {
        height: 1.15rem;
    }

    .h-\[400px\] {
        height: 400px;
    }

    .h-\[600px\] {
        height: 600px;
    }

    .h-\[calc\(100\%-1px\)\] {
        height: calc(100% - 1px);
    }

    .h-\[var\(--radix-select-trigger-height\)\] {
        height: var(--radix-select-trigger-height);
    }

    .h-auto {
        height: auto;
    }

    .h-full {
        height: 100%;
    }

    .h-px {
        height: 1px;
    }

    .max-h-\(--radix-select-content-available-height\) {
        max-height: var(--radix-select-content-available-height);
    }

    .max-h-\[90vh\] {
        max-height: 90vh;
    }

    .max-h-\[350px\] {
        max-height: 350px;
    }

    .min-h-4 {
        min-height: calc(var(--spacing) * 4);
    }

    .min-h-16 {
        min-height: calc(var(--spacing) * 16);
    }

    .min-h-screen {
        min-height: 100vh;
    }

    .w-2\.5 {
        width: calc(var(--spacing) * 2.5);
    }

    .w-3 {
        width: calc(var(--spacing) * 3);
    }

    .w-4 {
        width: calc(var(--spacing) * 4);
    }

    .w-5 {
        width: calc(var(--spacing) * 5);
    }

    .w-6 {
        width: calc(var(--spacing) * 6);
    }

    .w-8 {
        width: calc(var(--spacing) * 8);
    }

    .w-12 {
        width: calc(var(--spacing) * 12);
    }

    .w-20 {
        width: calc(var(--spacing) * 20);
    }

    .w-32 {
        width: calc(var(--spacing) * 32);
    }

    .w-64 {
        width: calc(var(--spacing) * 64);
    }

    .w-96 {
        width: calc(var(--spacing) * 96);
    }

    .w-\[15\%\] {
        width: 15%;
    }

    .w-\[40\%\] {
        width: 40%;
    }

    .w-\[120px\] {
        width: 120px;
    }

    .w-fit {
        width: fit-content;
    }

    .w-full {
        width: 100%;
    }

    .max-w-7xl {
        max-width: var(--container-7xl);
    }

    .max-w-\[92vw\] {
        max-width: 92vw;
    }

    .max-w-\[calc\(100\%-2rem\)\] {
        max-width: calc(100% - 2rem);
    }

    .max-w-full {
        max-width: 100%;
    }

    .max-w-md {
        max-width: var(--container-md);
    }

    .min-w-0 {
        min-width: calc(var(--spacing) * 0);
    }

    .min-w-\[8rem\] {
        min-width: 8rem;
    }

    .min-w-\[200px\] {
        min-width: 200px;
    }

    .min-w-\[var\(--radix-select-trigger-width\)\] {
        min-width: var(--radix-select-trigger-width);
    }

    .flex-1 {
        flex: 1;
    }

    .flex-shrink-0, .shrink-0 {
        flex-shrink: 0;
    }

    .caption-bottom {
        caption-side: bottom;
    }

    .origin-\(--radix-select-content-transform-origin\) {
        transform-origin: var(--radix-select-content-transform-origin);
    }

    .origin-\(--radix-tooltip-content-transform-origin\) {
        transform-origin: var(--radix-tooltip-content-transform-origin);
    }

    .translate-x-\[-50\%\] {
        --tw-translate-x: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .-translate-y-1\/2 {
        --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-y-0\.5 {
        --tw-translate-y: calc(var(--spacing) * .5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-y-\[-50\%\] {
        --tw-translate-y: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-y-\[calc\(-50\%_-_2px\)\] {
        --tw-translate-y: calc(-50% - 2px);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .rotate-45 {
        rotate: 45deg;
    }

    .transform {
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    }

    .animate-in {
        animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
    }

    .animate-spin {
        animation: var(--animate-spin);
    }

    .cursor-default {
        cursor: default;
    }

    .cursor-help {
        cursor: help;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .touch-none {
        touch-action: none;
    }

    .resize-none {
        resize: none;
    }

    .scroll-my-1 {
        scroll-margin-block: calc(var(--spacing) * 1);
    }

    .list-disc {
        list-style-type: disc;
    }

    .auto-rows-min {
        grid-auto-rows: min-content;
    }

    .grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .grid-cols-\[0_1fr\] {
        grid-template-columns: 0 1fr;
    }

    .grid-rows-\[auto_auto\] {
        grid-template-rows: auto auto;
    }

    .flex-col {
        flex-direction: column;
    }

    .flex-col-reverse {
        flex-direction: column-reverse;
    }

    .flex-wrap {
        flex-wrap: wrap;
    }

    .items-center {
        align-items: center;
    }

    .items-end {
        align-items: flex-end;
    }

    .items-start {
        align-items: flex-start;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-center {
        justify-content: center;
    }

    .justify-end {
        justify-content: flex-end;
    }

    .justify-items-start {
        justify-items: start;
    }

    .gap-0 {
        gap: calc(var(--spacing) * 0);
    }

    .gap-1 {
        gap: calc(var(--spacing) * 1);
    }

    .gap-1\.5 {
        gap: calc(var(--spacing) * 1.5);
    }

    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }

    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }

    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }

    .gap-6 {
        gap: calc(var(--spacing) * 6);
    }

    .gap-8 {
        gap: calc(var(--spacing) * 8);
    }

    :where(.space-y-0\.5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * .5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * .5) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-1 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-2 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-3 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-4 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-6 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }

    .gap-y-0\.5 {
        row-gap: calc(var(--spacing) * .5);
    }

    .self-start {
        align-self: flex-start;
    }

    .justify-self-end {
        justify-self: flex-end;
    }

    .truncate {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }

    .overflow-auto {
        overflow: auto;
    }

    .overflow-hidden {
        overflow: hidden;
    }

    .overflow-x-auto {
        overflow-x: auto;
    }

    .overflow-x-hidden {
        overflow-x: hidden;
    }

    .overflow-y-auto {
        overflow-y: auto;
    }

    .rounded {
        border-radius: .25rem;
    }

    .rounded-\[2px\] {
        border-radius: 2px;
    }

    .rounded-\[4px\] {
        border-radius: 4px;
    }

    .rounded-\[inherit\] {
        border-radius: inherit;
    }

    .rounded-full {
        border-radius: 3.40282e38px;
    }

    .rounded-lg {
        border-radius: var(--radius);
    }

    .rounded-md {
        border-radius: calc(var(--radius) - 2px);
    }

    .rounded-sm {
        border-radius: calc(var(--radius) - 4px);
    }

    .rounded-xl {
        border-radius: calc(var(--radius) + 4px);
    }

    .rounded-xs {
        border-radius: var(--radius-xs);
    }

    .rounded-t-lg {
        border-top-left-radius: var(--radius);
        border-top-right-radius: var(--radius);
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .border-2 {
        border-style: var(--tw-border-style);
        border-width: 2px;
    }

    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .border-l {
        border-left-style: var(--tw-border-style);
        border-left-width: 1px;
    }

    .border-\[\#004c8c\]\/20 {
        border-color: oklab(41.4513% -.0383085 -.118041 / .2);
    }

    .border-blue-200 {
        border-color: var(--color-blue-200);
    }

    .border-input {
        border-color: var(--input);
    }

    .border-slate-200 {
        border-color: var(--color-slate-200);
    }

    .border-slate-300 {
        border-color: var(--color-slate-300);
    }

    .border-transparent {
        border-color: #0000;
    }

    .border-white {
        border-color: var(--color-white);
    }

    .border-t-transparent {
        border-top-color: #0000;
    }

    .border-l-transparent {
        border-left-color: #0000;
    }

    .bg-\[\#004c8c\] {
        background-color: #004c8c;
    }

    .bg-\[\#004c8c\]\/10 {
        background-color: oklab(41.4513% -.0383085 -.118041 / .1);
    }

    .bg-background {
        background-color: var(--background);
    }

    .bg-black\/50 {
        background-color: #00000080;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-black\/50 {
            background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
        }
    }

    .bg-blue-50 {
        background-color: var(--color-blue-50);
    }

    .bg-blue-100 {
        background-color: var(--color-blue-100);
    }

    .bg-blue-200 {
        background-color: var(--color-blue-200);
    }

    .bg-border {
        background-color: var(--border);
    }

    .bg-card {
        background-color: var(--card);
    }

    .bg-destructive {
        background-color: var(--destructive);
    }

    .bg-green-600 {
        background-color: var(--color-green-600);
    }

    .bg-input-background {
        background-color: var(--input-background);
    }

    .bg-muted {
        background-color: var(--muted);
    }

    .bg-muted\/30 {
        background-color: var(--muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-muted\/30 {
            background-color: color-mix(in oklab, var(--muted) 30%, transparent);
        }
    }

    .bg-muted\/50 {
        background-color: var(--muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-muted\/50 {
            background-color: color-mix(in oklab, var(--muted) 50%, transparent);
        }
    }

    .bg-popover {
        background-color: var(--popover);
    }

    .bg-primary {
        background-color: var(--primary);
    }

    .bg-secondary {
        background-color: var(--secondary);
    }

    .bg-slate-50\/50 {
        background-color: color-mix(in srgb, oklch(.984 .003 247.858) 50%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-slate-50\/50 {
            background-color: color-mix(in oklab, var(--color-slate-50) 50%, transparent);
        }
    }

    .bg-white {
        background-color: var(--color-white);
    }

    .bg-white\/60 {
        background-color: #fff9;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/60 {
            background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
    }

    .bg-white\/70 {
        background-color: #ffffffb3;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/70 {
            background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
    }

    .bg-white\/80 {
        background-color: #fffc;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/80 {
            background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
    }

    .bg-white\/90 {
        background-color: #ffffffe6;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/90 {
            background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
        }
    }

    .bg-gradient-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .bg-gradient-to-r {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .bg-\[linear-gradient\(to_right\,\#80808012_1px\,transparent_1px\)\,linear-gradient\(to_bottom\,\#80808012_1px\,transparent_1px\)\] {
        background-image: linear-gradient(to right, #80808012 1px, #0000 1px), linear-gradient(#80808012 1px, #0000 1px);
    }

    .from-\[\#004c8c\] {
        --tw-gradient-from: #004c8c;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-\[\#004c8c\]\/10 {
        --tw-gradient-from: oklab(41.4513% -.0383085 -.118041 / .1);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-amber-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.769 .188 70.08) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-amber-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 10%, transparent);
        }
    }

    .from-blue-50 {
        --tw-gradient-from: var(--color-blue-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-blue-50\/50 {
        --tw-gradient-from: color-mix(in srgb, oklch(.97 .014 254.604) 50%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-blue-50\/50 {
            --tw-gradient-from: color-mix(in oklab, var(--color-blue-50) 50%, transparent);
        }
    }

    .from-blue-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.623 .214 259.815) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-blue-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-blue-500) 10%, transparent);
        }
    }

    .from-cyan-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.715 .143 215.221) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-cyan-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-cyan-500) 10%, transparent);
        }
    }

    .from-emerald-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.696 .17 162.48) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-emerald-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-emerald-500) 10%, transparent);
        }
    }

    .from-green-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.723 .219 149.579) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-green-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-green-500) 10%, transparent);
        }
    }

    .from-indigo-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.585 .233 277.117) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-indigo-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-indigo-500) 10%, transparent);
        }
    }

    .from-orange-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.705 .213 47.604) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-orange-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-orange-500) 10%, transparent);
        }
    }

    .from-pink-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.656 .241 354.308) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-pink-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-pink-500) 10%, transparent);
        }
    }

    .from-purple-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.627 .265 303.9) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-purple-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
        }
    }

    .from-red-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.637 .237 25.331) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-red-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-red-500) 10%, transparent);
        }
    }

    .from-rose-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.645 .246 16.439) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-rose-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-rose-500) 10%, transparent);
        }
    }

    .from-sky-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.685 .169 237.323) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-sky-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-sky-500) 10%, transparent);
        }
    }

    .from-slate-50 {
        --tw-gradient-from: var(--color-slate-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-slate-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.554 .046 257.417) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-slate-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-slate-500) 10%, transparent);
        }
    }

    .from-teal-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.704 .14 182.503) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-teal-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-teal-500) 10%, transparent);
        }
    }

    .from-violet-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-violet-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 10%, transparent);
        }
    }

    .from-white {
        --tw-gradient-from: var(--color-white);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .from-yellow-500\/10 {
        --tw-gradient-from: color-mix(in srgb, oklch(.795 .184 86.047) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .from-yellow-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-yellow-500) 10%, transparent);
        }
    }

    .via-blue-50\/30 {
        --tw-gradient-via: color-mix(in srgb, oklch(.97 .014 254.604) 30%, transparent);
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .via-blue-50\/30 {
            --tw-gradient-via: color-mix(in oklab, var(--color-blue-50) 30%, transparent);
        }
    }

    .via-slate-50 {
        --tw-gradient-via: var(--color-slate-50);
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .via-white {
        --tw-gradient-via: var(--color-white);
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }

    .to-\[\#0066b3\] {
        --tw-gradient-to: #0066b3;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-\[\#0369a1\] {
        --tw-gradient-to: #0369a1;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-amber-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.666 .179 58.318) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-amber-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-amber-600) 20%, transparent);
        }
    }

    .to-blue-50 {
        --tw-gradient-to: var(--color-blue-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-blue-50\/30 {
        --tw-gradient-to: color-mix(in srgb, oklch(.97 .014 254.604) 30%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-blue-50\/30 {
            --tw-gradient-to: color-mix(in oklab, var(--color-blue-50) 30%, transparent);
        }
    }

    .to-blue-500\/10 {
        --tw-gradient-to: color-mix(in srgb, oklch(.623 .214 259.815) 10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-blue-500\/10 {
            --tw-gradient-to: color-mix(in oklab, var(--color-blue-500) 10%, transparent);
        }
    }

    .to-blue-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.546 .245 262.881) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-blue-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-blue-600) 20%, transparent);
        }
    }

    .to-cyan-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.609 .126 221.723) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-cyan-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-cyan-600) 20%, transparent);
        }
    }

    .to-emerald-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.596 .145 163.225) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-emerald-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-emerald-600) 20%, transparent);
        }
    }

    .to-green-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.627 .194 149.214) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-green-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-green-600) 20%, transparent);
        }
    }

    .to-indigo-50 {
        --tw-gradient-to: var(--color-indigo-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-indigo-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.511 .262 276.966) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-indigo-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-indigo-600) 20%, transparent);
        }
    }

    .to-orange-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.646 .222 41.116) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-orange-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-orange-600) 20%, transparent);
        }
    }

    .to-pink-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.592 .249 .584) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-pink-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-pink-600) 20%, transparent);
        }
    }

    .to-purple-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.558 .288 302.321) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-purple-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-purple-600) 20%, transparent);
        }
    }

    .to-red-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.577 .245 27.325) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-red-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-red-600) 20%, transparent);
        }
    }

    .to-rose-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.586 .253 17.585) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-rose-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-rose-600) 20%, transparent);
        }
    }

    .to-sky-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.588 .158 241.966) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-sky-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-sky-600) 20%, transparent);
        }
    }

    .to-slate-50\/50 {
        --tw-gradient-to: color-mix(in srgb, oklch(.984 .003 247.858) 50%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-slate-50\/50 {
            --tw-gradient-to: color-mix(in oklab, var(--color-slate-50) 50%, transparent);
        }
    }

    .to-slate-100 {
        --tw-gradient-to: var(--color-slate-100);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .to-slate-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.446 .043 257.281) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-slate-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-slate-600) 20%, transparent);
        }
    }

    .to-teal-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.6 .118 184.704) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-teal-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-teal-600) 20%, transparent);
        }
    }

    .to-violet-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.541 .281 293.009) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-violet-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-violet-600) 20%, transparent);
        }
    }

    .to-yellow-600\/20 {
        --tw-gradient-to: color-mix(in srgb, oklch(.681 .162 75.834) 20%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .to-yellow-600\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-yellow-600) 20%, transparent);
        }
    }

    .bg-\[size\:24px_24px\] {
        background-size: 24px 24px;
    }

    .bg-clip-text {
        background-clip: text;
    }

    .fill-primary {
        fill: var(--primary);
    }

    .p-0 {
        padding: calc(var(--spacing) * 0);
    }

    .p-0\.5 {
        padding: calc(var(--spacing) * .5);
    }

    .p-1 {
        padding: calc(var(--spacing) * 1);
    }

    .p-2 {
        padding: calc(var(--spacing) * 2);
    }

    .p-3 {
        padding: calc(var(--spacing) * 3);
    }

    .p-4 {
        padding: calc(var(--spacing) * 4);
    }

    .p-6 {
        padding: calc(var(--spacing) * 6);
    }

    .p-\[3px\] {
        padding: 3px;
    }

    .p-px {
        padding: 1px;
    }

    .px-2 {
        padding-inline: calc(var(--spacing) * 2);
    }

    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }

    .px-4 {
        padding-inline: calc(var(--spacing) * 4);
    }

    .px-6 {
        padding-inline: calc(var(--spacing) * 6);
    }

    .py-0\.5 {
        padding-block: calc(var(--spacing) * .5);
    }

    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }

    .py-1\.5 {
        padding-block: calc(var(--spacing) * 1.5);
    }

    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }

    .py-2\.5 {
        padding-block: calc(var(--spacing) * 2.5);
    }

    .py-3 {
        padding-block: calc(var(--spacing) * 3);
    }

    .py-4 {
        padding-block: calc(var(--spacing) * 4);
    }

    .py-12 {
        padding-block: calc(var(--spacing) * 12);
    }

    .pt-0 {
        padding-top: calc(var(--spacing) * 0);
    }

    .pt-2 {
        padding-top: calc(var(--spacing) * 2);
    }

    .pt-3 {
        padding-top: calc(var(--spacing) * 3);
    }

    .pt-4 {
        padding-top: calc(var(--spacing) * 4);
    }

    .pt-6 {
        padding-top: calc(var(--spacing) * 6);
    }

    .pr-2 {
        padding-right: calc(var(--spacing) * 2);
    }

    .pr-4 {
        padding-right: calc(var(--spacing) * 4);
    }

    .pr-8 {
        padding-right: calc(var(--spacing) * 8);
    }

    .pb-2 {
        padding-bottom: calc(var(--spacing) * 2);
    }

    .pb-3 {
        padding-bottom: calc(var(--spacing) * 3);
    }

    .pb-4 {
        padding-bottom: calc(var(--spacing) * 4);
    }

    .pb-6 {
        padding-bottom: calc(var(--spacing) * 6);
    }

    .pl-2 {
        padding-left: calc(var(--spacing) * 2);
    }

    .pl-4 {
        padding-left: calc(var(--spacing) * 4);
    }

    .pl-9 {
        padding-left: calc(var(--spacing) * 9);
    }

    .pl-10 {
        padding-left: calc(var(--spacing) * 10);
    }

    .text-center {
        text-align: center;
    }

    .text-left {
        text-align: left;
    }

    .text-right {
        text-align: right;
    }

    .align-middle {
        vertical-align: middle;
    }

    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .leading-none {
        --tw-leading: 1;
        line-height: 1;
    }

    .leading-tight {
        --tw-leading: var(--leading-tight);
        line-height: var(--leading-tight);
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }

    .tracking-tight {
        --tw-tracking: var(--tracking-tight);
        letter-spacing: var(--tracking-tight);
    }

    .text-balance {
        text-wrap: balance;
    }

    .whitespace-nowrap {
        white-space: nowrap;
    }

    .text-\[\#004c8c\] {
        color: #004c8c;
    }

    .text-amber-600 {
        color: var(--color-amber-600);
    }

    .text-blue-50 {
        color: var(--color-blue-50);
    }

    .text-blue-600 {
        color: var(--color-blue-600);
    }

    .text-blue-800 {
        color: var(--color-blue-800);
    }

    .text-blue-900 {
        color: var(--color-blue-900);
    }

    .text-card-foreground {
        color: var(--card-foreground);
    }

    .text-current {
        color: currentColor;
    }

    .text-cyan-600 {
        color: var(--color-cyan-600);
    }

    .text-destructive {
        color: var(--destructive);
    }

    .text-destructive-foreground {
        color: var(--destructive-foreground);
    }

    .text-emerald-600 {
        color: var(--color-emerald-600);
    }

    .text-foreground {
        color: var(--foreground);
    }

    .text-green-600 {
        color: var(--color-green-600);
    }

    .text-indigo-600 {
        color: var(--color-indigo-600);
    }

    .text-muted-foreground {
        color: var(--muted-foreground);
    }

    .text-orange-600 {
        color: var(--color-orange-600);
    }

    .text-pink-600 {
        color: var(--color-pink-600);
    }

    .text-popover-foreground {
        color: var(--popover-foreground);
    }

    .text-primary {
        color: var(--primary);
    }

    .text-primary-foreground {
        color: var(--primary-foreground);
    }

    .text-purple-600 {
        color: var(--color-purple-600);
    }

    .text-red-600 {
        color: var(--color-red-600);
    }

    .text-rose-600 {
        color: var(--color-rose-600);
    }

    .text-secondary-foreground {
        color: var(--secondary-foreground);
    }

    .text-sky-600 {
        color: var(--color-sky-600);
    }

    .text-slate-600 {
        color: var(--color-slate-600);
    }

    .text-slate-700 {
        color: var(--color-slate-700);
    }

    .text-slate-800 {
        color: var(--color-slate-800);
    }

    .text-teal-600 {
        color: var(--color-teal-600);
    }

    .text-transparent {
        color: #0000;
    }

    .text-violet-600 {
        color: var(--color-violet-600);
    }

    .text-white {
        color: var(--color-white);
    }

    .text-yellow-600 {
        color: var(--color-yellow-600);
    }

    .underline {
        text-decoration-line: underline;
    }

    .underline-offset-4 {
        text-underline-offset: 4px;
    }

    .opacity-20 {
        opacity: .2;
    }

    .opacity-50 {
        opacity: .5;
    }

    .opacity-70 {
        opacity: .7;
    }

    .shadow-2xl {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-lg {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-md {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-sm {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-xs {
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .ring-0 {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .ring-offset-background {
        --tw-ring-offset-color: var(--background);
    }

    .outline-hidden {
        --tw-outline-style: none;
        outline-style: none;
    }

    @media (forced-colors: active) {
        .outline-hidden {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }

    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
    }

    .blur-3xl {
        --tw-blur: blur(var(--blur-3xl));
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .filter {
        filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
    }

    .backdrop-blur-sm {
        --tw-backdrop-blur: blur(var(--blur-sm));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }

    .transition-\[color\,box-shadow\] {
        transition-property: color, box-shadow;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-colors {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-opacity {
        transition-property: opacity;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-shadow {
        transition-property: box-shadow;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-transform {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .transition-none {
        transition-property: none;
    }

    .duration-200 {
        --tw-duration: .2s;
        transition-duration: .2s;
    }

    .outline-none {
        --tw-outline-style: none;
        outline-style: none;
    }

    .select-none {
        -webkit-user-select: none;
        user-select: none;
    }

    .fade-in, .fade-in-0 {
        --tw-enter-opacity: 0;
    }

    .slide-in-from-top-2 {
        --tw-enter-translate-y: calc(2 * var(--spacing) * -1);
    }

    .zoom-in-95 {
        --tw-enter-scale: .95;
    }

    @media (hover: hover) {
        .group-hover\:from-amber-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.769 .188 70.08) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-amber-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-amber-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-blue-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.623 .214 259.815) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-blue-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-cyan-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.715 .143 215.221) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-cyan-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-cyan-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-emerald-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.696 .17 162.48) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-emerald-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-emerald-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-green-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.723 .219 149.579) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-green-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-green-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-indigo-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.585 .233 277.117) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-indigo-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-indigo-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-orange-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.705 .213 47.604) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-orange-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-pink-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.656 .241 354.308) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-pink-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-pink-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-purple-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.627 .265 303.9) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-purple-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-red-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.637 .237 25.331) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-red-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-red-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-rose-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.645 .246 16.439) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-rose-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-rose-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-sky-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.685 .169 237.323) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-sky-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-sky-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-slate-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.554 .046 257.417) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-slate-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-slate-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-teal-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.704 .14 182.503) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-teal-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-teal-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-violet-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.606 .25 292.717) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-violet-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-violet-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:from-yellow-500\/20:is(:where(.group):hover *) {
            --tw-gradient-from: color-mix(in srgb, oklch(.795 .184 86.047) 20%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-yellow-500\/20:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-amber-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.666 .179 58.318) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-amber-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-amber-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-blue-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.546 .245 262.881) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-blue-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-blue-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-cyan-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.609 .126 221.723) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-cyan-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-cyan-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-emerald-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.596 .145 163.225) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-emerald-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-emerald-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-green-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.627 .194 149.214) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-green-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-green-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-indigo-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.511 .262 276.966) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-indigo-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-indigo-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-orange-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.646 .222 41.116) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-orange-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-orange-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-pink-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.592 .249 .584) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-pink-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-pink-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-purple-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.558 .288 302.321) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-purple-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-purple-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-red-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.577 .245 27.325) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-red-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-red-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-rose-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.586 .253 17.585) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-rose-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-rose-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-sky-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.588 .158 241.966) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-sky-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-sky-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-slate-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.446 .043 257.281) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-slate-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-slate-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-teal-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.6 .118 184.704) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-teal-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-teal-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-violet-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.541 .281 293.009) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-violet-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-violet-600) 30%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .group-hover\:to-yellow-600\/30:is(:where(.group):hover *) {
            --tw-gradient-to: color-mix(in srgb, oklch(.681 .162 75.834) 30%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }

        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-yellow-600\/30:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-yellow-600) 30%, transparent);
            }
        }
    }

    .group-data-\[disabled\=true\]\:pointer-events-none:is(:where(.group)[data-disabled="true"] *) {
        pointer-events: none;
    }

    .group-data-\[disabled\=true\]\:opacity-50:is(:where(.group)[data-disabled="true"] *) {
        opacity: .5;
    }

    .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) {
        cursor: not-allowed;
    }

    .peer-disabled\:opacity-50:is(:where(.peer):disabled ~ *) {
        opacity: .5;
    }

    .selection\:bg-primary ::selection, .selection\:bg-primary::selection {
        background-color: var(--primary);
    }

    .selection\:text-primary-foreground ::selection, .selection\:text-primary-foreground::selection {
        color: var(--primary-foreground);
    }

    .file\:inline-flex::file-selector-button {
        display: inline-flex;
    }

    .file\:h-7::file-selector-button {
        height: calc(var(--spacing) * 7);
    }

    .file\:border-0::file-selector-button {
        border-style: var(--tw-border-style);
        border-width: 0;
    }

    .file\:bg-transparent::file-selector-button {
        background-color: #0000;
    }

    .file\:text-sm::file-selector-button {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .file\:font-medium::file-selector-button {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .file\:text-foreground::file-selector-button {
        color: var(--foreground);
    }

    .placeholder\:text-muted-foreground::placeholder {
        color: var(--muted-foreground);
    }

    .last\:border-b-0:last-child {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 0;
    }

    @media (hover: hover) {
        .hover\:scale-\[1\.02\]:hover {
            scale: 1.02;
        }
    }

    @media (hover: hover) {
        .hover\:border-\[\#004c8c\]\/30:hover {
            border-color: oklab(41.4513% -.0383085 -.118041 / .3);
        }
    }

    @media (hover: hover) {
        .hover\:border-\[\#004c8c\]\/50:hover {
            border-color: oklab(41.4513% -.0383085 -.118041 / .5);
        }
    }

    @media (hover: hover) {
        .hover\:border-cyan-500\/50:hover {
            border-color: color-mix(in srgb, oklch(.715 .143 215.221) 50%, transparent);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:border-cyan-500\/50:hover {
                border-color: color-mix(in oklab, var(--color-cyan-500) 50%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:border-orange-500\/50:hover {
            border-color: color-mix(in srgb, oklch(.705 .213 47.604) 50%, transparent);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:border-orange-500\/50:hover {
                border-color: color-mix(in oklab, var(--color-orange-500) 50%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:border-purple-500\/50:hover {
            border-color: color-mix(in srgb, oklch(.627 .265 303.9) 50%, transparent);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:border-purple-500\/50:hover {
                border-color: color-mix(in oklab, var(--color-purple-500) 50%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-accent:hover {
            background-color: var(--accent);
        }
    }

    @media (hover: hover) {
        .hover\:bg-destructive\/90:hover {
            background-color: var(--destructive);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-destructive\/90:hover {
                background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-muted:hover {
            background-color: var(--muted);
        }
    }

    @media (hover: hover) {
        .hover\:bg-muted\/50:hover {
            background-color: var(--muted);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-muted\/50:hover {
                background-color: color-mix(in oklab, var(--muted) 50%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-primary\/90:hover {
            background-color: var(--primary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-primary\/90:hover {
                background-color: color-mix(in oklab, var(--primary) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:bg-secondary\/80:hover {
            background-color: var(--secondary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-secondary\/80:hover {
                background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .hover\:from-\[\#003d6e\]:hover {
            --tw-gradient-from: #003d6e;
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
    }

    @media (hover: hover) {
        .hover\:from-\[\#003d70\]:hover {
            --tw-gradient-from: #003d70;
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
    }

    @media (hover: hover) {
        .hover\:to-\[\#004c8c\]:hover {
            --tw-gradient-to: #004c8c;
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
    }

    @media (hover: hover) {
        .hover\:to-\[\#025a8a\]:hover {
            --tw-gradient-to: #025a8a;
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
    }

    @media (hover: hover) {
        .hover\:text-accent-foreground:hover {
            color: var(--accent-foreground);
        }
    }

    @media (hover: hover) {
        .hover\:text-destructive:hover {
            color: var(--destructive);
        }
    }

    @media (hover: hover) {
        .hover\:no-underline:hover {
            text-decoration-line: none;
        }
    }

    @media (hover: hover) {
        .hover\:underline:hover {
            text-decoration-line: underline;
        }
    }

    @media (hover: hover) {
        .hover\:opacity-100:hover {
            opacity: 1;
        }
    }

    @media (hover: hover) {
        .hover\:shadow-lg:hover {
            --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    @media (hover: hover) {
        .hover\:shadow-xl:hover {
            --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }

    .focus\:border-\[\#004c8c\]:focus {
        border-color: #004c8c;
    }

    .focus\:bg-accent:focus {
        background-color: var(--accent);
    }

    .focus\:text-accent-foreground:focus {
        color: var(--accent-foreground);
    }

    .focus\:ring-2:focus {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .focus\:ring-\[\#004c8c\]:focus {
        --tw-ring-color: #004c8c;
    }

    .focus\:ring-ring:focus {
        --tw-ring-color: var(--ring);
    }

    .focus\:ring-offset-2:focus {
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }

    .focus\:outline-hidden:focus {
        --tw-outline-style: none;
        outline-style: none;
    }

    @media (forced-colors: active) {
        .focus\:outline-hidden:focus {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }

    .focus\:outline-none:focus {
        --tw-outline-style: none;
        outline-style: none;
    }

    .focus-visible\:border-ring:focus-visible {
        border-color: var(--ring);
    }

    .focus-visible\:ring-2:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .focus-visible\:ring-\[3px\]:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .focus-visible\:ring-destructive\/20:focus-visible {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .focus-visible\:ring-destructive\/20:focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
    }

    .focus-visible\:ring-ring\/50:focus-visible {
        --tw-ring-color: var(--ring);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .focus-visible\:ring-ring\/50:focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
        }
    }

    .focus-visible\:ring-white\/70:focus-visible {
        --tw-ring-color: #ffffffb3;
    }

    @supports (color: color-mix(in lab, red, red)) {
        .focus-visible\:ring-white\/70:focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
    }

    .focus-visible\:outline-1:focus-visible {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
    }

    .focus-visible\:outline-ring:focus-visible {
        outline-color: var(--ring);
    }

    .disabled\:pointer-events-none:disabled {
        pointer-events: none;
    }

    .disabled\:cursor-not-allowed:disabled {
        cursor: not-allowed;
    }

    .disabled\:opacity-50:disabled {
        opacity: .5;
    }

    .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
        grid-template-columns: 1fr auto;
    }

    .has-\[\>svg\]\:grid-cols-\[calc\(var\(--spacing\)\*4\)_1fr\]:has( > svg) {
        grid-template-columns: calc(var(--spacing) * 4) 1fr;
    }

    .has-\[\>svg\]\:gap-x-3:has( > svg) {
        column-gap: calc(var(--spacing) * 3);
    }

    .has-\[\>svg\]\:px-2\.5:has( > svg) {
        padding-inline: calc(var(--spacing) * 2.5);
    }

    .has-\[\>svg\]\:px-3:has( > svg) {
        padding-inline: calc(var(--spacing) * 3);
    }

    .has-\[\>svg\]\:px-4:has( > svg) {
        padding-inline: calc(var(--spacing) * 4);
    }

    .aria-invalid\:border-destructive[aria-invalid="true"] {
        border-color: var(--destructive);
    }

    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
    }

    .data-\[disabled\]\:pointer-events-none[data-disabled] {
        pointer-events: none;
    }

    .data-\[disabled\]\:opacity-50[data-disabled] {
        opacity: .5;
    }

    .data-\[placeholder\]\:text-muted-foreground[data-placeholder] {
        color: var(--muted-foreground);
    }

    .data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
        --tw-translate-y: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
        --tw-enter-translate-y: calc(2 * var(--spacing) * -1);
    }

    .data-\[side\=left\]\:-translate-x-1[data-side="left"] {
        --tw-translate-x: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
        --tw-enter-translate-x: calc(2 * var(--spacing));
    }

    .data-\[side\=right\]\:translate-x-1[data-side="right"] {
        --tw-translate-x: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
        --tw-enter-translate-x: calc(2 * var(--spacing) * -1);
    }

    .data-\[side\=top\]\:-translate-y-1[data-side="top"] {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
        --tw-enter-translate-y: calc(2 * var(--spacing));
    }

    .data-\[size\=default\]\:h-9[data-size="default"] {
        height: calc(var(--spacing) * 9);
    }

    .data-\[size\=sm\]\:h-8[data-size="sm"] {
        height: calc(var(--spacing) * 8);
    }

    :is(.\*\:data-\[slot\=alert-description\]\:text-destructive\/90 > *)[data-slot="alert-description"] {
        color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        :is(.\*\:data-\[slot\=alert-description\]\:text-destructive\/90 > *)[data-slot="alert-description"] {
            color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
    }

    :is(.\*\:data-\[slot\=select-value\]\:line-clamp-1 > *)[data-slot="select-value"] {
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        display: -webkit-box;
        overflow: hidden;
    }

    :is(.\*\:data-\[slot\=select-value\]\:flex > *)[data-slot="select-value"] {
        display: flex;
    }

    :is(.\*\:data-\[slot\=select-value\]\:items-center > *)[data-slot="select-value"] {
        align-items: center;
    }

    :is(.\*\:data-\[slot\=select-value\]\:gap-2 > *)[data-slot="select-value"] {
        gap: calc(var(--spacing) * 2);
    }

    .data-\[state\=active\]\:bg-card[data-state="active"] {
        background-color: var(--card);
    }

    .data-\[state\=active\]\:bg-gradient-to-r[data-state="active"] {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }

    .data-\[state\=active\]\:from-blue-500[data-state="active"] {
        --tw-gradient-from: var(--color-blue-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .data-\[state\=active\]\:from-cyan-500[data-state="active"] {
        --tw-gradient-from: var(--color-cyan-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .data-\[state\=active\]\:from-emerald-500[data-state="active"] {
        --tw-gradient-from: var(--color-emerald-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .data-\[state\=active\]\:from-orange-500[data-state="active"] {
        --tw-gradient-from: var(--color-orange-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .data-\[state\=active\]\:from-purple-500[data-state="active"] {
        --tw-gradient-from: var(--color-purple-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .data-\[state\=active\]\:to-blue-600[data-state="active"] {
        --tw-gradient-to: var(--color-blue-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .data-\[state\=active\]\:to-cyan-600[data-state="active"] {
        --tw-gradient-to: var(--color-cyan-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .data-\[state\=active\]\:to-emerald-600[data-state="active"] {
        --tw-gradient-to: var(--color-emerald-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .data-\[state\=active\]\:to-orange-600[data-state="active"] {
        --tw-gradient-to: var(--color-orange-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .data-\[state\=active\]\:to-purple-600[data-state="active"] {
        --tw-gradient-to: var(--color-purple-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    .data-\[state\=active\]\:text-white[data-state="active"] {
        color: var(--color-white);
    }

    .data-\[state\=active\]\:shadow-md[data-state="active"] {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .data-\[state\=checked\]\:translate-x-\[calc\(100\%-2px\)\][data-state="checked"] {
        --tw-translate-x: calc(100% - 2px);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .data-\[state\=checked\]\:border-primary[data-state="checked"] {
        border-color: var(--primary);
    }

    .data-\[state\=checked\]\:bg-primary[data-state="checked"] {
        background-color: var(--primary);
    }

    .data-\[state\=checked\]\:text-primary-foreground[data-state="checked"] {
        color: var(--primary-foreground);
    }

    .data-\[state\=closed\]\:animate-accordion-up[data-state="closed"] {
        animation: accordion-up var(--tw-duration, .2s) ease-out;
    }

    .data-\[state\=closed\]\:animate-out[data-state="closed"] {
        animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
    }

    .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
        --tw-exit-opacity: 0;
    }

    .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
        --tw-exit-scale: .95;
    }

    .data-\[state\=open\]\:animate-accordion-down[data-state="open"] {
        animation: accordion-down var(--tw-duration, .2s) ease-out;
    }

    .data-\[state\=open\]\:animate-in[data-state="open"] {
        animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
    }

    .data-\[state\=open\]\:bg-accent[data-state="open"] {
        background-color: var(--accent);
    }

    .data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
        color: var(--muted-foreground);
    }

    .data-\[state\=open\]\:fade-in-0[data-state="open"] {
        --tw-enter-opacity: 0;
    }

    .data-\[state\=open\]\:zoom-in-95[data-state="open"] {
        --tw-enter-scale: .95;
    }

    .data-\[state\=selected\]\:bg-muted[data-state="selected"] {
        background-color: var(--muted);
    }

    .data-\[state\=unchecked\]\:translate-x-0[data-state="unchecked"] {
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .data-\[state\=unchecked\]\:bg-switch-background[data-state="unchecked"] {
        background-color: var(--switch-background);
    }

    @media (width >= 40rem) {
        .sm\:inline {
            display: inline;
        }
    }

    @media (width >= 40rem) {
        .sm\:max-w-\[500px\] {
            max-width: 500px;
        }
    }

    @media (width >= 40rem) {
        .sm\:max-w-\[900px\] {
            max-width: 900px;
        }
    }

    @media (width >= 40rem) {
        .sm\:max-w-lg {
            max-width: var(--container-lg);
        }
    }

    @media (width >= 40rem) {
        .sm\:flex-row {
            flex-direction: row;
        }
    }

    @media (width >= 40rem) {
        .sm\:justify-between {
            justify-content: space-between;
        }
    }

    @media (width >= 40rem) {
        .sm\:justify-end {
            justify-content: flex-end;
        }
    }

    @media (width >= 40rem) {
        .sm\:gap-0 {
            gap: calc(var(--spacing) * 0);
        }
    }

    @media (width >= 40rem) {
        .sm\:gap-8 {
            gap: calc(var(--spacing) * 8);
        }
    }

    @media (width >= 40rem) {
        .sm\:text-left {
            text-align: left;
        }
    }

    @media (width >= 48rem) {
        .md\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    @media (width >= 48rem) {
        .md\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }

    @media (width >= 64rem) {
        .lg\:col-span-1 {
            grid-column: span 1 / span 1;
        }
    }

    @media (width >= 64rem) {
        .lg\:col-span-2 {
            grid-column: span 2 / span 2;
        }
    }

    @media (width >= 64rem) {
        .lg\:col-span-3 {
            grid-column: span 3 / span 3;
        }
    }

    @media (width >= 64rem) {
        .lg\:max-w-\[1000px\] {
            max-width: 1000px;
        }
    }

    @media (width >= 64rem) {
        .lg\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    @media (width >= 64rem) {
        .lg\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
    }

    @media (width >= 64rem) {
        .lg\:grid-cols-5 {
            grid-template-columns: repeat(5, minmax(0, 1fr));
        }
    }

    .dark\:border-blue-800:is(.dark *) {
        border-color: var(--color-blue-800);
    }

    .dark\:border-input:is(.dark *) {
        border-color: var(--input);
    }

    .dark\:bg-blue-950:is(.dark *) {
        background-color: var(--color-blue-950);
    }

    .dark\:bg-blue-950\/20:is(.dark *) {
        background-color: color-mix(in srgb, oklch(.282 .091 267.935) 20%, transparent);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:bg-blue-950\/20:is(.dark *) {
            background-color: color-mix(in oklab, var(--color-blue-950) 20%, transparent);
        }
    }

    .dark\:bg-destructive\/60:is(.dark *) {
        background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:bg-destructive\/60:is(.dark *) {
            background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
        }
    }

    .dark\:bg-input\/30:is(.dark *) {
        background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:bg-input\/30:is(.dark *) {
            background-color: color-mix(in oklab, var(--input) 30%, transparent);
        }
    }

    .dark\:bg-slate-900:is(.dark *) {
        background-color: var(--color-slate-900);
    }

    .dark\:from-blue-950\/30:is(.dark *) {
        --tw-gradient-from: color-mix(in srgb, oklch(.282 .091 267.935) 30%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:from-blue-950\/30:is(.dark *) {
            --tw-gradient-from: color-mix(in oklab, var(--color-blue-950) 30%, transparent);
        }
    }

    .dark\:to-indigo-950\/30:is(.dark *) {
        --tw-gradient-to: color-mix(in srgb, oklch(.257 .09 281.288) 30%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:to-indigo-950\/30:is(.dark *) {
            --tw-gradient-to: color-mix(in oklab, var(--color-indigo-950) 30%, transparent);
        }
    }

    .dark\:text-blue-100:is(.dark *) {
        color: var(--color-blue-100);
    }

    .dark\:text-blue-200:is(.dark *) {
        color: var(--color-blue-200);
    }

    .dark\:text-muted-foreground:is(.dark *) {
        color: var(--muted-foreground);
    }

    @media (hover: hover) {
        .dark\:hover\:bg-accent\/50:is(.dark *):hover {
            background-color: var(--accent);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .dark\:hover\:bg-accent\/50:is(.dark *):hover {
                background-color: color-mix(in oklab, var(--accent) 50%, transparent);
            }
        }
    }

    @media (hover: hover) {
        .dark\:hover\:bg-input\/50:is(.dark *):hover {
            background-color: var(--input);
        }

        @supports (color: color-mix(in lab, red, red)) {
            .dark\:hover\:bg-input\/50:is(.dark *):hover {
                background-color: color-mix(in oklab, var(--input) 50%, transparent);
            }
        }
    }

    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
    }

    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
    }

    .dark\:data-\[state\=active\]\:border-input:is(.dark *)[data-state="active"] {
        border-color: var(--input);
    }

    .dark\:data-\[state\=active\]\:bg-input\/30:is(.dark *)[data-state="active"] {
        background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:data-\[state\=active\]\:bg-input\/30:is(.dark *)[data-state="active"] {
            background-color: color-mix(in oklab, var(--input) 30%, transparent);
        }
    }

    .dark\:data-\[state\=active\]\:text-foreground:is(.dark *)[data-state="active"] {
        color: var(--foreground);
    }

    .dark\:data-\[state\=checked\]\:bg-primary:is(.dark *)[data-state="checked"] {
        background-color: var(--primary);
    }

    .dark\:data-\[state\=checked\]\:bg-primary-foreground:is(.dark *)[data-state="checked"] {
        background-color: var(--primary-foreground);
    }

    .dark\:data-\[state\=unchecked\]\:bg-card-foreground:is(.dark *)[data-state="unchecked"] {
        background-color: var(--card-foreground);
    }

    .dark\:data-\[state\=unchecked\]\:bg-input\/80:is(.dark *)[data-state="unchecked"] {
        background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
        .dark\:data-\[state\=unchecked\]\:bg-input\/80:is(.dark *)[data-state="unchecked"] {
            background-color: color-mix(in oklab, var(--input) 80%, transparent);
        }
    }

    .\[\&_p\]\:leading-relaxed p {
        --tw-leading: var(--leading-relaxed);
        line-height: var(--leading-relaxed);
    }

    .\[\&_svg\]\:pointer-events-none svg {
        pointer-events: none;
    }

    .\[\&_svg\]\:shrink-0 svg {
        flex-shrink: 0;
    }

    .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
    }

    .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground svg:not([class*="text-"]) {
        color: var(--muted-foreground);
    }

    .\[\&_tr\]\:border-b tr {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .\[\&_tr\:last-child\]\:border-0 tr:last-child {
        border-style: var(--tw-border-style);
        border-width: 0;
    }

    .\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0:has([role="checkbox"]) {
        padding-right: calc(var(--spacing) * 0);
    }

    .\[\.border-b\]\:pb-6.border-b {
        padding-bottom: calc(var(--spacing) * 6);
    }

    .\[\.border-t\]\:pt-6.border-t {
        padding-top: calc(var(--spacing) * 6);
    }

    :is(.\*\:\[span\]\:last\:flex > *):is(span):last-child {
        display: flex;
    }

    :is(.\*\:\[span\]\:last\:items-center > *):is(span):last-child {
        align-items: center;
    }

    :is(.\*\:\[span\]\:last\:gap-2 > *):is(span):last-child {
        gap: calc(var(--spacing) * 2);
    }

    .\[\&\:last-child\]\:pb-6:last-child {
        padding-bottom: calc(var(--spacing) * 6);
    }

    .\[\&\>\[role\=checkbox\]\]\:translate-y-\[2px\] > [role="checkbox"] {
        --tw-translate-y: 2px;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .\[\&\>svg\]\:pointer-events-none > svg {
        pointer-events: none;
    }

    .\[\&\>svg\]\:size-3 > svg {
        width: calc(var(--spacing) * 3);
        height: calc(var(--spacing) * 3);
    }

    .\[\&\>svg\]\:size-4 > svg {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
    }

    .\[\&\>svg\]\:translate-y-0\.5 > svg {
        --tw-translate-y: calc(var(--spacing) * .5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .\[\&\>svg\]\:text-current > svg {
        color: currentColor;
    }

    .\[\&\>tr\]\:last\:border-b-0 > tr:last-child {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 0;
    }

    .\[\&\[data-state\=open\]\>svg\]\:rotate-180[data-state="open"] > svg {
        rotate: 180deg;
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:bg-accent:hover {
            background-color: var(--accent);
        }
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:bg-destructive\/90:hover {
            background-color: var(--destructive);
        }

        @supports (color: color-mix(in lab, red, red)) {
            a.\[a\&\]\:hover\:bg-destructive\/90:hover {
                background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:bg-primary\/90:hover {
            background-color: var(--primary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            a.\[a\&\]\:hover\:bg-primary\/90:hover {
                background-color: color-mix(in oklab, var(--primary) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:bg-secondary\/90:hover {
            background-color: var(--secondary);
        }

        @supports (color: color-mix(in lab, red, red)) {
            a.\[a\&\]\:hover\:bg-secondary\/90:hover {
                background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
            }
        }
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:text-accent-foreground:hover {
            color: var(--accent-foreground);
        }
    }
}

:root {
    --font-size: 16px;
    --background: #f8f9fc;
    --foreground: #1e293b;
    --card: #fff;
    --card-foreground: #1e293b;
    --popover: #fff;
    --popover-foreground: #1e293b;
    --primary: #004c8c;
    --primary-foreground: #fff;
    --secondary: #f1f5f9;
    --secondary-foreground: #1e293b;
    --muted: #f1f5f9;
    --muted-foreground: #64748b;
    --accent: #e0f2fe;
    --accent-foreground: #0c4a6e;
    --destructive: #dc2626;
    --destructive-foreground: #fff;
    --border: #e2e8f0;
    --input: #e2e8f0;
    --input-background: #fff;
    --switch-background: #cbd5e1;
    --font-weight-medium: 500;
    --font-weight-normal: 400;
    --ring: #004c8c;
    --chart-1: #004c8c;
    --chart-2: #0ea5e9;
    --chart-3: #06b6d4;
    --chart-4: #10b981;
    --chart-5: #f59e0b;
    --radius: .5rem;
    --sidebar: #fff;
    --sidebar-foreground: #1e293b;
    --sidebar-primary: #004c8c;
    --sidebar-primary-foreground: #fff;
    --sidebar-accent: #f1f5f9;
    --sidebar-accent-foreground: #1e293b;
    --sidebar-border: #e2e8f0;
    --sidebar-ring: #004c8c;
}

.dark {
    --background: oklch(.145 0 0);
    --foreground: oklch(.985 0 0);
    --card: oklch(.145 0 0);
    --card-foreground: oklch(.985 0 0);
    --popover: oklch(.145 0 0);
    --popover-foreground: oklch(.985 0 0);
    --primary: oklch(.985 0 0);
    --primary-foreground: oklch(.205 0 0);
    --secondary: oklch(.269 0 0);
    --secondary-foreground: oklch(.985 0 0);
    --muted: oklch(.269 0 0);
    --muted-foreground: oklch(.708 0 0);
    --accent: oklch(.269 0 0);
    --accent-foreground: oklch(.985 0 0);
    --destructive: oklch(.396 .141 25.723);
    --destructive-foreground: oklch(.637 .237 25.331);
    --border: oklch(.269 0 0);
    --input: oklch(.269 0 0);
    --ring: oklch(.439 0 0);
    --font-weight-medium: 500;
    --font-weight-normal: 400;
    --chart-1: oklch(.488 .243 264.376);
    --chart-2: oklch(.696 .17 162.48);
    --chart-3: oklch(.769 .188 70.08);
    --chart-4: oklch(.627 .265 303.9);
    --chart-5: oklch(.645 .246 16.439);
    --sidebar: oklch(.205 0 0);
    --sidebar-foreground: oklch(.985 0 0);
    --sidebar-primary: oklch(.488 .243 264.376);
    --sidebar-primary-foreground: oklch(.985 0 0);
    --sidebar-accent: oklch(.269 0 0);
    --sidebar-accent-foreground: oklch(.985 0 0);
    --sidebar-border: oklch(.269 0 0);
    --sidebar-ring: oklch(.439 0 0);
}

html {
    font-size: var(--font-size);
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
    initial-value: rotateX(0);
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
    initial-value: rotateY(0);
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
    initial-value: rotateZ(0);
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false;
    initial-value: skewX(0);
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false;
    initial-value: skewY(0);
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-leading {
    syntax: "*";
    inherits: false
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false
}

@property --tw-tracking {
    syntax: "*";
    inherits: false
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-blur {
    syntax: "*";
    inherits: false
}

@property --tw-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-invert {
    syntax: "*";
    inherits: false
}

@property --tw-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-duration {
    syntax: "*";
    inherits: false
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

@keyframes enter {
    from {
        opacity: var(--tw-enter-opacity, 1);
        transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
    }
}

@keyframes exit {
    to {
        opacity: var(--tw-exit-opacity, 1);
        transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
    }
}

@keyframes accordion-down {
    from {
        height: 0;
    }

    to {
        height: var(--radix-accordion-content-height, var(--bits-accordion-content-height));
    }
}

@keyframes accordion-up {
    from {
        height: var(--radix-accordion-content-height, var(--bits-accordion-content-height));
    }

    to {
        height: 0;
    }
}
